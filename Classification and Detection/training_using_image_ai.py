# -*- coding: utf-8 -*-
"""Copy of Training using image ai

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15JvDyYBU85R7A1hC28-xvM4je5nWeFRT

Mounting google drive
"""

from google.colab import drive
drive.mount('/gdrive')

!unzip "/gdrive/My Drive/BE Project 2019 - 2020/final_training_folder/garbage.zip" -d '/gdrive/My Drive/BE Project 2019 - 2020/final_training_folder/'

import os

execution_path = '/gdrive/My Drive/BE Project 2019 - 2020/final_training_folder/'

data_directory_path = '/gdrive/My Drive/BE Project 2019 - 2020/final_training_folder/garbage/'

print("Train annotations: " + str(len(os.listdir(data_directory_path + "train/annotations/"))))
print("Train images: " + str(len(os.listdir(data_directory_path + "train/images/"))))
print("Test annotations: " + str(len(os.listdir(data_directory_path + "validation/annotations/"))))
print("Test images: " + str(len(os.listdir(data_directory_path + "validation/images/"))))

# installing dependencies

# Tensorflow
!pip install tensorflow-gpu==1.13.1

# Image Ai
!pip install imageai --upgrade

# remove annotations

import xml.etree.ElementTree as ET
import os

annotations_directory = execution_path + "/validation/annotations"
images_directory = execution_path + "/validation/images"

count = 0
for file_ in os.listdir(annotations_directory):
    
    # get the filename string
    abs_annotation_file_path = os.path.join(annotations_directory, file_)
    # print("Editing file : " + abs_annotation_file_path)

    # parse the file
    doc = ET.parse(abs_annotation_file_path)

    # get the root of the element tree
    root = doc.getroot()
    
    # get the filename tag 
    filenameElement = root.find("filename")
    img_filename = filenameElement.text

    # get the absolute image path for the image from the annotation
    img_abs_path = os.path.join(images_directory, img_filename)
    
    if os.path.isfile(img_abs_path):
        # image corresponding to the annotation exists
        # print(img_abs_path + " exists")
        pass
    else:
        print(img_abs_path + " does not exists")
        os.remove(abs_annotation_file_path)
        print(abs_annotation_file_path + " Deleted")

print(count)

!wget https://github.com/OlafenwaMoses/ImageAI/releases/download/essential-v4/pretrained-yolov3.h5 -P '/gdrive/My Drive/BE Project 2019 - 2020/final_training_folder/models/'

import os
from imageai.Detection.Custom import DetectionModelTrainer

model_trainer = DetectionModelTrainer()
model_trainer.setModelTypeAsYOLOv3()
model_trainer.setDataDirectory(data_directory_path)

yolo_path = os.path.join(os.path.join(execution_path, "models"), "pretrained-yolov3.h5")

model_trainer.setTrainConfig(object_names_array=["glass", "metal", "paper", "plastic"], batch_size=10, num_experiments=50, train_from_pretrained_model=yolo_path)

model_trainer.trainModel()

